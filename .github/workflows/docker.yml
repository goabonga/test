name: Create and publish a Docker image

on:
  push:
    branches: ['main']

jobs:

#  build-and-push-image:
#    runs-on: ubuntu-latest
#
#    permissions:
#      contents: write
#      packages: write
#      attestations: write
#      id-token: write     
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#
#      - name: Set up Python
#        uses: actions/setup-python@v4
#        with:
#          python-version: '3.12'
#
#      - name: Install Poetry
#        run: |
#          curl -sSL https://install.python-poetry.org | python3 -
#          echo "$HOME/.local/bin" >> $GITHUB_PATH
#
#      - name: Install dependencies with Poetry
#        run: |
#          poetry install --with dev
#
#      - name: Generate changelog with Commitizen
#        id: commitizen
#        uses: commitizen-tools/commitizen-action@master
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#          changelog: true
#
#      - name: Log in to Docker Hub
#        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
#        with:
#          username: ${{ vars.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#
#      - name: Build and push Docker image
#        id: push
#        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
#        with:
#          context: .
#          file: ./Dockerfile
#          push: true
#          tags: goabonga/test:${{ steps.commitizen.outputs.version }}
#
  build-and-push-image:
    runs-on: ubuntu-latest

    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}

    permissions:
      contents: write
      packages: write
      attestations: write
      id-token: write     

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

#      - name: Set up Python
#        uses: actions/setup-python@v4
#        with:
#          python-version: '3.12'
#
#      - name: Install Poetry
#        run: |
#          curl -sSL https://install.python-poetry.org | python3 -
#          echo "$HOME/.local/bin" >> $GITHUB_PATH
#
#      - name: Install dependencies with Poetry
#        run: |
#          poetry install --with dev

      - name: Generate changelog with Commitizen
        id: commitizen
        uses: commitizen-tools/commitizen-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          changelog: true


      #- name: Set Helm Chart Version
      #  run: |
      #    cat helm/Chart.yaml  # Print the file to verify version change
      #  shell: bash

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          # tags: ${{ steps.meta.outputs.tags }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.commitizen.outputs.version }}
          labels: ${{ steps.meta.outputs.labels }}
      
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

#      - name: Install Helm
#        run: |
#          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
#
#      - name: Package Helm Chart
#        run: |
#          helm package helm --destination ./helm-packages

      - name: Push Helm Chart to GitHub Pages
        uses: helm/chart-releaser-action@v1.6.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          charts_dir: ./helm
          #packages_dir: ./helm-packages
